
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.StatusScalarFieldEnum = {
  id: 'id',
  code: 'code',
  label: 'label',
  sort_order: 'sort_order',
  is_active: 'is_active'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  lat: 'lat',
  lng: 'lng',
  detail: 'detail',
  img: 'img',
  device_id: 'device_id',
  user_agent: 'user_agent',
  created_at: 'created_at',
  category_id: 'category_id',
  responsible_id: 'responsible_id'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReportStatusHistoryScalarFieldEnum = {
  id: 'id',
  report_id: 'report_id',
  from_status: 'from_status',
  to_status: 'to_status',
  changed_at: 'changed_at',
  changed_by: 'changed_by',
  img_before: 'img_before',
  img_after: 'img_after',
  finished: 'finished',
  finished_at: 'finished_at',
  note: 'note'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  password: 'password',
  displayName: 'displayName',
  role_id: 'role_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Status: 'Status',
  Report: 'Report',
  Category: 'Category',
  ReportStatusHistory: 'ReportStatusHistory',
  User: 'User',
  Role: 'Role'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Project\\mytownhandshake\\server_fastify\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Project\\mytownhandshake\\server_fastify\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Status {\n  id         Int     @id @db.SmallInt\n  code       String  @unique\n  label      String\n  sort_order Int     @default(0) @map(\"sort_order\") @db.SmallInt\n  is_active  Boolean @default(true) @map(\"is_active\")\n\n  from_histories ReportStatusHistory[] @relation(\"FromStatus\")\n  to_histories   ReportStatusHistory[] @relation(\"ToStatus\")\n\n  @@map(\"statuses\")\n}\n\nmodel Report {\n  id         String                @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  lat        Float\n  lng        Float\n  detail     String                @db.Text\n  img        String                @db.Text\n  device_id  String                @default(\"\") @db.Text\n  user_agent String                @default(\"\") @map(\"user_agent\") @db.Text\n  created_at DateTime              @default(now()) @map(\"created_at\") @db.Timestamptz\n  histories  ReportStatusHistory[]\n\n  category_id Int\n  category    Category @relation(fields: [category_id], references: [id])\n\n  responsible_id String? @map(\"responsible_id\") @db.Uuid\n  responsible    User?   @relation(fields: [responsible_id], references: [id])\n\n  @@map(\"reports_problem\")\n}\n\nmodel Category {\n  id         Int      @id @default(autoincrement())\n  name       String   @unique\n  created_at DateTime @default(now()) @map(\"created_at\") @db.Timestamptz\n  updated_at DateTime @updatedAt @map(\"updated_at\") @db.Timestamptz\n  reports    Report[]\n\n  @@map(\"categories\")\n}\n\nmodel ReportStatusHistory {\n  id          Int       @id @default(autoincrement())\n  report_id   String    @map(\"report_id\") @db.Uuid\n  from_status Int?      @map(\"from_status\") @db.SmallInt\n  to_status   Int       @map(\"to_status\") @db.SmallInt\n  changed_at  DateTime  @default(now()) @map(\"changed_at\") @db.Timestamptz\n  changed_by  String?   @map(\"changed_by\")\n  img_before  String?   @map(\"img_before\") @db.Text\n  img_after   String?   @map(\"img_after\") @db.Text\n  finished    Boolean   @default(false)\n  finished_at DateTime? @map(\"finished_at\") @db.Timestamptz\n  note        String?\n\n  report Report  @relation(fields: [report_id], references: [id], onDelete: Cascade)\n  from   Status? @relation(\"FromStatus\", fields: [from_status], references: [id])\n  to     Status  @relation(\"ToStatus\", fields: [to_status], references: [id])\n\n  @@index([report_id, changed_at], name: \"idx_rsh_report_id_changed_at\")\n  @@map(\"report_status_history\")\n}\n\nmodel User {\n  id          String   @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  email       String?  @unique\n  username    String   @unique\n  password    String\n  displayName String?\n  role_id     Int      @default(1) @map(\"role_id\")\n  created_at  DateTime @default(now()) @map(\"created_at\") @db.Timestamptz\n  updated_at  DateTime @updatedAt @map(\"updated_at\") @db.Timestamptz\n  role        Role     @relation(fields: [role_id], references: [id])\n\n  reports_responsible Report[]\n\n  @@map(\"users\")\n}\n\nmodel Role {\n  id          Int      @id @default(autoincrement())\n  name        String   @unique\n  description String?\n  created_at  DateTime @default(now()) @map(\"created_at\") @db.Timestamptz\n  updated_at  DateTime @updatedAt @map(\"updated_at\") @db.Timestamptz\n\n  users User[]\n\n  @@map(\"roles\")\n}\n",
  "inlineSchemaHash": "859ba2b1c93e8c9e4e8a0104f45939d8c8857abbac846d51de9154a2d58ba428",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Status\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sort_order\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"sort_order\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"from_histories\",\"kind\":\"object\",\"type\":\"ReportStatusHistory\",\"relationName\":\"FromStatus\"},{\"name\":\"to_histories\",\"kind\":\"object\",\"type\":\"ReportStatusHistory\",\"relationName\":\"ToStatus\"}],\"dbName\":\"statuses\"},\"Report\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lng\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"detail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"img\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_agent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"histories\",\"kind\":\"object\",\"type\":\"ReportStatusHistory\",\"relationName\":\"ReportToReportStatusHistory\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToReport\"},{\"name\":\"responsible_id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"responsible_id\"},{\"name\":\"responsible\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportToUser\"}],\"dbName\":\"reports_problem\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"CategoryToReport\"}],\"dbName\":\"categories\"},\"ReportStatusHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"report_id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"report_id\"},{\"name\":\"from_status\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"from_status\"},{\"name\":\"to_status\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"to_status\"},{\"name\":\"changed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"changed_at\"},{\"name\":\"changed_by\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"changed_by\"},{\"name\":\"img_before\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"img_before\"},{\"name\":\"img_after\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"img_after\"},{\"name\":\"finished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"finished_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"finished_at\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportToReportStatusHistory\"},{\"name\":\"from\",\"kind\":\"object\",\"type\":\"Status\",\"relationName\":\"FromStatus\"},{\"name\":\"to\",\"kind\":\"object\",\"type\":\"Status\",\"relationName\":\"ToStatus\"}],\"dbName\":\"report_status_history\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role_id\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"role_id\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUser\"},{\"name\":\"reports_responsible\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportToUser\"}],\"dbName\":\"users\"},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoleToUser\"}],\"dbName\":\"roles\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

