generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Status {
  id        Int     @id @db.SmallInt
  code      String  @unique
  label     String
  sortOrder Int     @default(0) @map("sort_order") @db.SmallInt
  isActive  Boolean @default(true) @map("is_active")

  fromHistories ReportStatusHistory[] @relation("FromStatus")
  toHistories   ReportStatusHistory[] @relation("ToStatus")

  @@map("statuses")
}

model Report {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  lat       Float
  lng       Float
  detail    String   @db.Text
  img       String   @db.Text
  meta      Json     @default("{}") @db.JsonB
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz

  histories ReportStatusHistory[]

  categoryId Int      @map("category_id")
  category   Category @relation(fields: [categoryId], references: [id])

  @@map("reports_problem")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz
  reports   Report[]

  @@map("categories")
}

model ReportStatusHistory {
  id         Int      @id @default(autoincrement())
  reportId   String   @map("report_id") @db.Uuid
  fromStatus Int?     @map("from_status") @db.SmallInt
  toStatus   Int      @map("to_status") @db.SmallInt
  changedAt  DateTime @default(now()) @map("changed_at") @db.Timestamptz
  changedBy  String?  @map("changed_by")
  note       String?
  meta       Json     @default("{}") @db.JsonB

  report Report  @relation(fields: [reportId], references: [id], onDelete: Cascade)
  from   Status? @relation("FromStatus", fields: [fromStatus], references: [id])
  to     Status  @relation("ToStatus", fields: [toStatus], references: [id])

  @@index([reportId, changedAt], name: "idx_rsh_report_id_changed_at")
  @@map("report_status_history")
}
